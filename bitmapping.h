
// this is just a file of silly precalculations so these don't have to be computed at runtime,
// to be used by tinybitset.h


/*


bit mapping, mapping of the bit that represents the number, 
and 0 for all the bits that are not the bit that represents the number:


if n == 32
1 -> 00000000000000000000000000000000001
2 -> 00000000000000000000000000000000010
3 -> 00000000000000000000000000000000100
4 -> 00000000000000000000000000000001000
...
32 -> 10000000000000000000000000000000000

*/


int BIT_MAPPING[64] {
	1, 4, 8, 16, 32, 64, 128, 256, 512, 1024,  																    // 10
	2048, 4096, 8192, 16384, 32768, 65536, 131072,  															// 7
	262144, 524288, 1048576, 2097152, 4194304, 8388608, 														// 6
	16777216, 33554432, 67108864, 134217728, 268435456, 														// 5
	536870912, 1073741824, 2147483648, 4294967296, 8589934592, 													// 5
	17179869184, 34359738368, 68719476736, 137438953472, 274877906944, 									        // 5
	549755813888, 1099511627776, 2199023255552, 4398046511104, 8796093022208, 								 	// 5
	17592186044416, 35184372088832, 70368744177664, 140737488355328, 281474976710656,   						// 5
	562949953421312, 1125899906842624, 2251799813685248, 4503599627370496, 9007199254740992,					// 5
	18014398509481984, 36028797018963968, 72057594037927936, 144115188075855872, 288230376151711744,			// 5
	576460752303423488, 1152921504606846976, 2305843009213693952, 4611686018427387904, 9223372036854775808		// 5
};







/*


mask mapping, mapping of all the bits that are not the bit that represents the number, 
and 0 for the bit that represents the number

if n == 32
1 -> 11111111111111111111111111111111110
2 -> 11111111111111111111111111111111101
3 -> 11111111111111111111111111111111011
...

32 -> 01111111111111111111111111111111111

*/ 

int MASK_MAPPING[64] = {
	18446744073709551614, 18446744073709551613, 18446744073709551611, 18446744073709551607, 18446744073709551599, // 5
	18446744073709551583, 18446744073709551551, 18446744073709551487, 18446744073709551359, 18446744073709551103, //10
	18446744073709550591, 18446744073709549567, 18446744073709547519, 18446744073709543423, 18446744073709535231, // 15
	18446744073709518847, 18446744073709486079, 18446744073709420543, 18446744073709289471, 18446744073709027327,
	18446744073708503039, 18446744073707454463, 18446744073705357311, 18446744073701163007, 18446744073692774399,
	18446744073675997183, 18446744073642442751, 18446744073575333887, 18446744073441116159, 18446744073172680703,
	18446744072635809791, 18446744071562067967, 18446744069414584319, 18446744065119617023, 18446744056529682431,
	18446744039349813247, 18446744004990074879, 18446743936270598143, 18446743798831644671, 18446743523953737727,
	18446742974197923839, 18446741874686296063, 18446739675663040511, 18446735277616529407, 18446726481523507199, // 45
	18446708889337462783, 18446673704965373951, 18446603336221296287, 18446462598733140959, 18446181123756830207,
	18445618173804209151, 18444692273898967039, 18442840474088482815, 18439136874467514367, 18431729675225577471,
	18416915276741603679, 18387286479773656095, 18328028885837760927, 18209513697965970431, 17972483322222389439,
	17498422570735227455, 16650301067760893487, 15154058061812225535, 12061572049914889631

};
